name: Run unittests.
on: [push]
jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        #go: ['1.16.5', '1.17.0-beta1', '1.17.0-rc1']
        go: ['>=1.21.0-rc.3']

    steps:
        #- uses: actions/cache@v3
        #with:
            # In order:
            # * Module download cache
            # * Build cache (Linux)
            # * Build cache (Mac)
            # * Build cache (Windows)
            #    path: |
            #    ~/go/pkg/mod
            #    ~/.cache/go-build
            #    ~/Library/Caches/go-build
            #    ~\AppData\Local\go-build
            #key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
            #restore-keys: |
            #    ${{ runner.os }}-go-${{ matrix.go-version }}-

      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/setup-go@v3
        with:
          stable: false
          go-version: ${{ matrix.go }}

      - run: make testv

      - uses: golangci/golangci-lint-action@v2
        with:
          #version: v2.5.2
          version: latest
          args: --print-issued-lines -c $GITHUB_WORKSPACE/.golangci.yml
          #only-new-issues: false
          skip-go-installation: true
          skip-pkg-cache: false
          skip-build-cache: false

    #- name: Gosec
    #  uses: securego/gosec@master
    #  with:
    #    # we let the report trigger content trigger a failure using the GitHub Security features.
    #    # G304 (CWE-22): Potential file inclusion via variable (Confidence: HIGH, Severity: MEDIUM)
    #    #args: '-exclude G304 -no-fail -fmt sarif -out results.sarif ./...'
    #    args: '-no-fail -nosec -quiet -exclude G101,G304,G402,G404 ./internal/... ./cmd/...'
